(module
 (type $FUNCSIG$vjj (func (param i64 i64)))
 (type $FUNCSIG$vj (func (param i64)))
 (type $FUNCSIG$v (func))
 (type $FUNCSIG$viijijiii (func (param i32 i32 i64 i32 i64 i32 i32 i32)))
 (import "env" "AddGas" (func $AddGas (param i64)))
 (import "env" "InitializeVariables" (func $InitializeVariables))
 (import "env" "ReadWithPointer" (func $ReadWithPointer (param i64 i64)))
 (import "env" "TESTEVENT" (func $TESTEVENT (param i32 i32 i64 i32 i64 i32 i32 i32)))
 (import "env" "WriteWithPointer" (func $WriteWithPointer (param i64 i64)))
 (table 0 anyfunc)
 (memory $0 1)
 (export "memory" (memory $0))
 (export "declaredFunction" (func $declaredFunction))
 (export "key3bxkrcr5" (func $key3bxkrcr5))
 (export "init" (func $init))
 (export "testEvent" (func $testEvent))
 (func $declaredFunction (; 5 ;)
  (call $WriteWithPointer
   (i64.const 0)
   (i64.const 0)
  )
  (call $ReadWithPointer
   (i64.const 0)
   (i64.const 0)
  )
  (call $AddGas
   (i64.const 0)
  )
 )
 (func $key3bxkrcr5 (; 6 ;)
 )
 (func $init (; 7 ;)
  (call $InitializeVariables)
 )
 (func $testEvent (; 8 ;) (param $0 i32) (param $1 i32) (param $2 i64) (param $3 i32) (param $4 i64) (param $5 i32) (param $6 i32) (param $7 i32)
  (call $TESTEVENT
   (get_local $0)
   (get_local $1)
   (get_local $2)
   (get_local $3)
   (get_local $4)
   (get_local $5)
   (get_local $6)
   (get_local $7)
  )
 )
)
