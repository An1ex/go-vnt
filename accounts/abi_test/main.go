package main

import (
	"fmt"
	"os"

	"github.com/vntchain/go-vnt/accounts/abi"
	"github.com/vntchain/go-vnt/common"
	"github.com/vntchain/go-vnt/log"
)

func init() {
	log.Root().SetHandler(log.LvlFilterHandler(log.LvlTrace, log.StreamHandler(os.Stderr, log.TerminalFormat(true))))
}

func main() {
	//buffer := bytes.NewBuffer([]byte(`[{"constant":true,"inputs":[],"name":"a","outputs":[{"name":"","type":"uint256"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"val","type":"uint256"}],"name":"modify_a","outputs":[{"name":"","type":"uint256"}],"payable":false,"type":"function"}]modify_a","outputs":[],"payable":false,"type":"function"}]`))

	abires, err := abi.JSON(buffer)
	if err != nil {
		fmt.Printf("err %+v\n", err)
	}
	fmt.Printf("########## %+v\n", abires)
	// args, err := abires.Pack("init", uint64(111))
	// if err != nil {
	// 	fmt.Printf("########### err\n", err)
	// }
	// fmt.Printf("################%+v", args)
	//packInput()
}

func packInput() {
	input := "608060405234801561001057600080fd5b506040516040806109118339810180604052810190808051906020019092919080519060200190929190505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055508160ff166002816100f691906100fe565b505050610151565b81548183558181111561012557818360005260206000209182019101610124919061012a565b5b505050565b61014e91905b8082111561014a5760008082016000905550600101610130565b5090565b90565b6107b1806101606000396000f300608060405260043610610078576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063337039601461007d5780635c19a95c146100ae578063609ff1bd146100f15780639e7b8d6114610122578063b3f98adc14610165578063e9d3034c14610195575b600080fd5b34801561008957600080fd5b506100926101c6565b604051808260ff1660ff16815260200191505060405180910390f35b3480156100ba57600080fd5b506100ef600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506101cf565b005b3480156100fd57600080fd5b50610106610521565b604051808260ff1660ff16815260200191505060405180910390f35b34801561012e57600080fd5b50610163600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061059d565b005b34801561017157600080fd5b50610193600480360381019080803560ff16906020019092919050505061069a565b005b3480156101a157600080fd5b506101aa61077c565b604051808260ff1660ff16815260200191505060405180910390f35b600060de905090565b600080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002091508160010160009054906101000a900460ff161561022f5761051c565b5b600073ffffffffffffffffffffffffffffffffffffffff16600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415801561035d57503373ffffffffffffffffffffffffffffffffffffffff16600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b156103cc57600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff169250610230565b3373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156104055761051c565b60018260010160006101000a81548160ff021916908315150217905550828260010160026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060010160009054906101000a900460ff161561050457816000015460028260010160019054906101000a900460ff1660ff168154811015156104e557fe5b906000526020600020016000016000828254019250508190555061051b565b816000015481600001600082825401925050819055505b5b505050565b6000806000809150600090505b6002805490508160ff161015610598578160028260ff1681548110151561055157fe5b9060005260206000200160000154111561058b5760028160ff1681548110151561057757fe5b906000526020600020016000015491508092505b808060010191505061052e565b505090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415806106455750600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff165b1561064f57610697565b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055505b50565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060010160009054906101000a900460ff168061070257506002805490508260ff1610155b1561070c57610778565b60018160010160006101000a81548160ff021916908315150217905550818160010160016101000a81548160ff021916908360ff160217905550806000015460028360ff1681548110151561075d57fe5b90600052602060002001600001600082825401925050819055505b5050565b6000606f9050905600a165627a7a723058200cbbd66b12242b1e0307c09b5d69f9e1babbb13785344201ffbd89db15b5eccc0029000000000000000000000000000000000000000000000000000000000000006f00000000000000000000000000000000000000000000000000000000000000de"
	tobyte := common.Hex2Bytes(input)
	log.Debug("test", "Hex2Bytes", tobyte)
}
